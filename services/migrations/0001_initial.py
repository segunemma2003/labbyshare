# Generated by Django 5.2 on 2025-07-13 09:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("regions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="category_icons/"
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("sort_order", models.IntegerField(db_index=True, default=0)),
                ("slug", models.SlugField(blank=True, max_length=250)),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="regions.region",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="AddOn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "price",
                    models.DecimalField(db_index=True, decimal_places=2, max_digits=10),
                ),
                ("duration_minutes", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("max_quantity", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addons",
                        to="services.category",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField()),
                (
                    "base_price",
                    models.DecimalField(db_index=True, decimal_places=2, max_digits=10),
                ),
                ("duration_minutes", models.IntegerField(db_index=True)),
                ("preparation_time", models.IntegerField(default=0)),
                ("cleanup_time", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("sort_order", models.IntegerField(db_index=True, default=0)),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="service_images/"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=250)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="services.category",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="RegionalPricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(db_index=True, decimal_places=2, max_digits=10),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "promotional_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("promotion_start", models.DateTimeField(blank=True, null=True)),
                ("promotion_end", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="regions.region"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regional_pricing",
                        to="services.service",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="service_images/")),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("is_primary", models.BooleanField(default=False)),
                ("sort_order", models.IntegerField(default=0)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="services.service",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="ServiceReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], db_index=True
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_reviews",
                        to="services.service",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["region", "is_active", "sort_order"],
                name="services_ca_region__f3b24b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["region", "name"], name="services_ca_region__274ce5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["slug", "region"], name="services_ca_slug_b0e57e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together={("name", "region")},
        ),
        migrations.AddIndex(
            model_name="addon",
            index=models.Index(
                fields=["category", "is_active"], name="services_ad_categor_be2a2d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="addon",
            index=models.Index(fields=["price"], name="services_ad_price_ecffed_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="addon",
            unique_together={("name", "category")},
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["category", "is_active", "sort_order"],
                name="services_se_categor_1b8fc9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["category", "is_featured"],
                name="services_se_categor_753af2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["base_price", "category"], name="services_se_base_pr_73803e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["duration_minutes"], name="services_se_duratio_74fe11_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="service",
            index=models.Index(
                fields=["slug", "category"], name="services_se_slug_1bf9dc_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="service",
            unique_together={("name", "category")},
        ),
        migrations.AddIndex(
            model_name="regionalpricing",
            index=models.Index(
                fields=["region", "is_active"], name="services_re_region__36e5f8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="regionalpricing",
            index=models.Index(
                fields=["service", "region"], name="services_re_service_ee8bee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="regionalpricing",
            index=models.Index(
                fields=["promotion_start", "promotion_end"],
                name="services_re_promoti_f0336d_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="regionalpricing",
            unique_together={("service", "region")},
        ),
        migrations.AddIndex(
            model_name="serviceimage",
            index=models.Index(
                fields=["service", "is_primary"], name="services_se_service_e2776e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="serviceimage",
            index=models.Index(
                fields=["service", "sort_order"], name="services_se_service_3d7715_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="servicereview",
            index=models.Index(
                fields=["service", "rating"], name="services_se_service_1926bf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="servicereview",
            index=models.Index(
                fields=["service", "is_published", "created_at"],
                name="services_se_service_3e03e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="servicereview",
            index=models.Index(
                fields=["user", "created_at"], name="services_se_user_id_af281c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="servicereview",
            unique_together={("service", "user")},
        ),
    ]
